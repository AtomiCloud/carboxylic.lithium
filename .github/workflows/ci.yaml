name: CI

on:
  push:

env:
  ATOMI_SERVICE: Lithium

jobs:
  precommit:
    name: Pre-Commit
    runs-on:
      - nscloud-ubuntu-22.04-amd64-4x8-with-cache
      - nscloud-cache-size-50gb
      - nscloud-cache-tag-carboxylic-lithium-nix-store-cache
      - nscloud-git-mirror-1gb
    steps:
      # Setup
      - uses: AtomiCloud/actions.setup-nix@v2
      - uses: AtomiCloud/actions.cache-nuget@v1

      # pre commit
      - name: Run pre-commit
        run: nix develop .#ci -c ./scripts/ci/pre-commit.sh

  unit-test:
    name: Unit Tests
    runs-on:
      - nscloud-ubuntu-22.04-amd64-4x8-with-cache
      - nscloud-cache-size-50gb
      - nscloud-cache-tag-carboxylic-lithium-unit-test-cache
      - nscloud-git-mirror-1gb
    steps:
      # Setup
      - uses: AtomiCloud/actions.setup-nix@v2
      - uses: AtomiCloud/actions.cache-nuget@v1

      # Test
      - name: Run Test
        continue-on-error: true
        run: nix develop .#ci -c ./scripts/ci/test.sh UnitTest
      # Connect to Codecov
      # - name: Upload test results to Codecov
      #   if: ${{ !cancelled() }}
      #   uses: codecov/test-results-action@v1
      #   with:
      #     fail_ci_if_error: true
      #     verbose: true
      #     files: ./UnitTest/TestResults/TestResults.xml
      #     token: ${{ secrets.CODECOV_TOKEN }}

  unit-test-coverage:
    name: Unit Test Coverage
    runs-on:
      - nscloud-ubuntu-22.04-amd64-4x8-with-cache
      - nscloud-cache-size-50gb
      - nscloud-cache-tag-carboxylic-lithium-unit-test-coverage-cache
      - nscloud-git-mirror-1gb
    steps:
      # Setup
      - uses: AtomiCloud/actions.setup-nix@v2
      - uses: AtomiCloud/actions.cache-nuget@v1

      # Coverage
      - name: Get Unit Test Coverage
        continue-on-error: true
        run: nix develop .#ci -c ./scripts/local/cover.sh UnitTest Lithium,LithiumTestHelper

      # Connect to Codecov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/UnitTest/coverage.cobertura.xml
